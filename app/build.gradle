plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-parcelize'
}

final VERSION_MAJOR = 1
final VERSION_MINOR = 6
final VERSION_PATCH = 5

android {
    compileSdkVersion 34

    defaultConfig {
        applicationId "io.cryptem.app"
        minSdkVersion 21
        targetSdkVersion 34
        //versionCode XYYYZZZ (X - Major, YYY - Minor, ZZZ - Patch)
        versionCode Integer.parseInt(String.valueOf(VERSION_MAJOR) + String.valueOf(VERSION_MINOR).padLeft(3, "0") + String.valueOf(VERSION_PATCH).padLeft(3, "0"))
        versionName "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    def localPropertiesFile = rootProject.file("local.properties")
    def localProperties = new Properties()
    localProperties.load(new FileInputStream(localPropertiesFile))
    Properties props = new Properties()
    props.load(new FileInputStream(new File("signing.properties")))
    signingConfigs {
        debug {
            storeFile file("../debug.keystore")
        }
        release {
            storeFile file(props['keystore'])
            storePassword props['keystorePassword']
            keyAlias props['keyAlias']
            keyPassword props['keyPassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "env"
    productFlavors {
        dev {
            dimension "env"
            applicationIdSuffix ".dev"
            buildConfigField "String", "CG_API_KEY", localProperties['CG_API_KEY']
        }
        prod {
            dimension "env"
            buildConfigField "String", "CG_API_KEY", localProperties['CG_API_KEY']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
    namespace 'io.cryptem.app'
}

configurations {
    all {
        exclude group: 'xpp3', module: 'xpp3'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation project(':arch')

    //Hilt
    implementation("com.google.dagger:hilt-android:2.51")
    kapt("com.google.dagger:hilt-android-compiler:2.51")
    implementation 'androidx.hilt:hilt-navigation-fragment:1.2.0'
    kapt "androidx.hilt:hilt-compiler:1.2.0"
    implementation 'androidx.hilt:hilt-work:1.2.0'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'

    implementation "androidx.room:room-runtime:2.6.1"
    implementation 'androidx.room:room-ktx:2.6.1'
    kapt 'androidx.room:room-compiler:2.6.1'

    implementation platform('com.google.firebase:firebase-bom:26.4.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.7'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.7'
    implementation "androidx.fragment:fragment-ktx:1.6.2"

    //OkHttp
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation "com.squareup.retrofit2:converter-simplexml:2.9.0"

    implementation('com.squareup.moshi:moshi-kotlin:1.15.0')
    kapt('com.squareup.moshi:moshi-kotlin-codegen:1.15.0')

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    kapt 'com.github.bumptech.glide:compiler:4.14.2'

    //Android SVG
    implementation 'com.caverock:androidsvg:1.4'

    //Google Play Services
    implementation 'com.google.gms:google-services:4.4.1'
    implementation 'com.google.android.gms:play-services-location:21.1.0'

    //Google Maps
    implementation 'com.google.android.gms:play-services-maps:18.2.0'

    //ZXing
    implementation 'com.google.zxing:core:3.4.1'
    implementation('com.journeyapps:zxing-android-embedded:4.2.0') { transitive = false }

    //MPAndroidChart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:28.3.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-config-ktx'

    implementation "androidx.work:work-runtime-ktx:2.9.0"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}